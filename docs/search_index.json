[
["index.html", "Choose youR own Pythway Chapter 1 Welcome 1.1 How to use this book 1.2 About 1.3 Contributing", " Choose youR own Pythway Julia Stewart Lowndes and contributors 2020-05-13 Chapter 1 Welcome Hello! This book aims to empower scientists with resources to use to learn computational and open data science skills. Often, it is hard to even know which skills you need! This book’s “choose your own pathway” style invites you to choose an intentional and well-worn path rather than creating one from scratch. This book is not an exhaustive list of skill-building resources available but is highly curated, opinionated, and increasingly narrated to meet the needs of scientists that are new to coding and/or those looking to upgrade existing workflows. It is set up in a style that in ecology we call a “dicotomous key”, where depending to your answer to a prompt, you take yourself to a different part of the book. Resources center around open source languages and reproducible, collaborative workflows, including R, Python, Unix, and GitHub. 1.1 How to use this book Use this book to help create your learning plan to setup new analytical workflows and/or streamline existing ones. It will direct you to existing tutorials, communities, or scripts for each step, encouraging you to think deliberately along the way so that you can incrementally improve your skills and workflows. For example, if your current workflow requires multiple software interfaces and languages, this book will challenge you to think about whether you should focus on learning a new language or software, or on streamlining how languages or software interoperate. The theme is to reduce friction as much as possible, so you can focus on science. While you can use this book alone, it is much better to learn together (see Chapter 12!). Start with a colleague/friend; you can be “accountability buddies” for each other while you choose you own pathways together, and you can continue to be even as your paths diverge. Read more in the Preface in Chapter 2 and then go to Chapter 3 to choose your own pathway. 1.2 About We are developing this book specifically to meet the needs of biomedical scientists who are part of CZI’s Neurodegenerative Challenge Network — but it is designed for wide use across research domains. It is led, edited and maintained by Julia Stewart Lowndes and Openscapes with help from a growing number of NDCN contributors, including you. Demonstrating the power of open source not only for analysis but for communication, the book is written in R (bookdown) and published through GitHub. Contributors include: NDCN Computational Advisors NDCN Office Hours participants Justin Savage 1.3 Contributing This imperfect and incomplete book is a work in progress. But it is available openly as a resource while it is iteratively improved. Please help us improve! Do you have an idea for resources, improvements on text, or a better title for the book? (This book’s title is really not great. It aims to give the reader a sense of participation — without infringing on copyright — and a sense of R and Python.) We welcome contributions: please edit the book or share resources that have helped you via email or GitHub. We are thankful for your contributions and will include them after considering whether they fit within our opinionated framework and audience needs. This book is licensed under a Creative Commons Attribution 4.0 International License. "],
["preface.html", "Chapter 2 Preface", " Chapter 2 Preface as scientists, don’t have time to start from the beginning we need welcoming entryways a lot of wonderful tutorials out there to learn the thing you want. But what about when you don’t know exactly what you need? Or you want to streamline? this book tries to help you find entryways and think about what you need not a comprehensive list of choices but some well-worn pathways opinionated to limit choice (opinions by Lowndes and others — attribution identified) written for scientists by scientists "],
["what-to-learn.html", "Chapter 3 What should I learn? 3.1 Learn a new language 3.2 Image analysis 3.3 RNA Sequencing 3.4 Project Management &amp; Workflows 3.5 GitHub 3.6 Data Sharing 3.7 Plotting 3.8 Publishing 3.9 Containers", " Chapter 3 What should I learn? Preamble: Modern coders use collaborative version control software like GitHub. Workflows and interoperating between tools and software is really critical. 3.1 Learn a new language Introductory tutorials will help you install software and get comfortable using it. They will also and help you develop the mindset to seek out existing code that works (including your own!) and adapt it for your analyses. You want to learn: R …4.1 Python with no previous coding experience… 5.1 with previous coding experience…5.2 The Command Line… You are not sure or need to use multiple languages together…11.1 3.2 Image analysis You want to learn: CellProfiler… https://cellprofiler.org/ ImageJ… with no previous coding experience…7.1 to write automated macros and plugins…7.2 QuPath… https://qupath.github.io/ Napari… https://napari.org/tutorials/ - Nick Sofroniew 3.3 RNA Sequencing Molly Hammell software Gene Yeo UCSD course 3.4 Project Management &amp; Workflows Google Drive / Box / Dropbox… AWS… Project-oriented workflows….11.2 R Markdown…4.3 Jupyter Notebooks… GitHub Issues…8.2 evcouplings pipeline…9.2 text editors (could be its own chapter) 3.5 GitHub intro with R …4.1 walking back changes with R…8.1 Issues…8.2 3.6 Data Sharing Platforms for data sharing Intro to ML conceptually … Intro ML in R….4.5 Intro ML in Python…. 3.7 Plotting should this be a section or page? 3.8 Publishing create its own page GitHub for Publishing…8.2 3.9 Containers Docker … "],
["rstats.html", "Chapter 4 R 4.1 Intro to R/RStudio for data science with the tidyverse 4.2 Statistics with R 4.3 RMarkdown 4.4 Shiny 4.5 Machine Learning", " Chapter 4 R Preamble: thought of as just for statistics…Why do you want to learn R? Modern R users use RStudio. RStudio provides a software interface (called the IDE: Integrated Development Environment), concepts of tidy data, analytical packages (including tidyverse and tidymodels), reproducible reporting and publishing (RMarkdown, bookdown, blogdown), and interactive dashboards (Shiny), and a powerful user and developer community (#rstats). 4.1 Intro to R/RStudio for data science with the tidyverse R for Excel Users - Julia Lowndes &amp; Allison Horst Assumes no previous coding experience (not only Excel users), and teaches R as a workflow, full of tidyverse, RMarkdown, GitHub, collaboration &amp; reproducibility. R for Data Science - Hadley Wickham &amp; Garrett Grolemund THE go-to resource for all things tidyverse. Called R4DS for short. learn with the R4DS community…12.2.2 R Education for Beginners - RStudio Education 4.2 Statistics with R Statistics and R - Rafael Irizarry &amp; Michael Love Check out the follow-up courses from this series Introduction to (environmental) data analysis &amp; stats in R - Allison Horst Assumes no previous experience with R or stats. Also teaches GitHub Advanced methods for (environmental) data analysis in R - Allison Horst Assumes you’ve taken the previous course above 4.3 RMarkdown aka literate programming, notebooks, also for publishing RMarkdown for Scientists - Nick Tierney Assumes… Making websites in RMarkdown 4.4 Shiny Mastering Shiny - Hadley Wickham Assumes… Shiny tips &amp; tricks for improving your apps and solving common problems - Dean Attali 4.5 Machine Learning tidymodels by RStudio Education Assumes…check out Ch X first Supervised Machine Learning for Text Analysis in R by Emil Hvitfeldt and Julia Silge "],
["python.html", "Chapter 5 Python 5.1 Learning Python as a first language 5.2 Learning Python as a second language 5.3 Machine Learning", " Chapter 5 Python Preamble: python for data science or programming. Versions. Python had some upgrades between versions 2 and 3 in ~2010, and it’s important to keep this in mind as you learn, since you may come across code that is deprecated in the newest version (this is true of any language, not just Python). A recommendation is that if you’re learning Python to create your own new workflows, focus on Python 3, and if you’ll primarily be running older workflows, focus on Python 2. (See also this discussion on page vi). Either way, the majority of your learning will be the same, but just keep these Versions in mind. 5.1 Learning Python as a first language Programming with Python - Software Carpentry Assumes no previous coding experience Python 3 5.2 Learning Python as a second language Scipy Lecture Notes - Edited by Varoquaux et al. Assumes some familiarity with coding concepts Python 3 Python Introduction - Google for Education Assumes strong familiarity with coding concepts, for example that you are learning Python as a second programming language. Python 2 5.3 Machine Learning Introduction to Machine Learning - Lawrence Carin, Coursera "],
["command-line.html", "Chapter 6 The Command Line", " Chapter 6 The Command Line Preamble: The Command Line has many names, including Unix, Terminal… "],
["imagej.html", "Chapter 7 ImageJ 7.1 Intro to ImageJ and FIJI 7.2 ImageJ Macros 7.3 ImageJ Plugins", " Chapter 7 ImageJ ImageJ is software developed by the NIH for image analysis. The FIJI version comes packaged with many plugins which allow for many common image analysis methods you may need, and is the recommended version to use. The main appeal of ImageJ over other software choices (like Python) because it enables you to analyze images with minimal coding. From the ImageJ homepage: ImageJ is an open source image processing program designed for scientific multidimensional images. It is also highly extensible, with thousands of plugins and scripts for performing a wide variety of tasks, and a large user community. 7.1 Intro to ImageJ and FIJI FIJI (“Fiji Is Just ImageJ”) is the recommended version of ImageJ. Intro to ImageJ - ImageJ Team Assumes no previous experience. Links to Getting Started and Tutorials. 7.2 ImageJ Macros Macros are a way to automate a series of ImageJ commands for image analysis in ImageJ with minimal coding. They are usually written in a special ImageJ macro language that is like a simpler version of Java. You can create a macro by recording a series of commands you make, and you can also reuse or remix hundreds of existing macros from the community. ImageJ Macro Language - ImageJ Team Assumes no previous coding experience. 7.3 ImageJ Plugins As the ImageJ Macro language is quite limited in the calculations it can perform itself, you may find that is unable to run the types of analysis you are trying to do (or that it does them very slowly). The way to remedy this is to write your own Java plugin which adds functionality to ImageJ. How To Make Fiji Plugin - ImageJ Fiji YouTube Channel Assumes familiarity with Java. Recommended to use Eclipse to easily develop your Java code and to edit an existing plugin .jar file so that the maven packaging of the plugin is easier to manage. Note: this example uses an older version of the ImageJ API, so we recommend using a newer plugin like Skeletonize3D instead. "],
["git-gh.html", "Chapter 8 Git/GitHub 8.1 Fixing mistakes 8.2 GitHub Issues", " Chapter 8 Git/GitHub Preamble: IDEs vs command line, not branches, etc 8.1 Fixing mistakes GitHub: A beginner’s guide to going back in time (aka fixing mistakes) - Melanie Frazier 8.2 GitHub Issues GitHub for project management - Julie Lowndes, Openscapes GitHub for publishing - Julie Lowndes, Openscapes "],
["ndcn-workflows.html", "Chapter 9 Workflows by NDCN 9.1 Quantitative Methods in Genetics and Genomics Course 9.2 evcouplings pipeline", " Chapter 9 Workflows by NDCN Preamble: 9.1 Quantitative Methods in Genetics and Genomics Course Quantitative Methods in Genetics and Genomics Course - Gene Yeo and others Assumes… 9.2 evcouplings pipeline EVcouplings Python Framework Marks lab, https://evcouplings.org/ "],
["workflows.html", "Chapter 10 Workflows &amp; pipelines 10.1 Documentation 10.2 SQL and R", " Chapter 10 Workflows &amp; pipelines Preamble: 10.1 Documentation https://www.protocols.io/ 10.2 SQL and R Using SQL in RStudio Assumes you are already an R/RStudio user. For a refresher…Chapter 4.1 "],
["proj-mgmt.html", "Chapter 11 Project Management 11.1 Overview of what’s important &amp; possible 11.2 Project-oriented workflows 11.3 Google Docs 11.4 Box", " Chapter 11 Project Management Preamble: interoperability between software, workflows etc. Evolving with the softwarescape personal notebook lab onboarding docs/wiki/handbook 11.1 Overview of what’s important &amp; possible Wilson et al. Lowndes et al. 11.2 Project-oriented workflows What They Forgot to Teach You About R R-focused, but Chapters 1-4 particularly are relevant no matter the language 11.3 Google Docs 11.4 Box "],
["community.html", "Chapter 12 Community learning 12.1 Twitter 12.2 Slack 12.3 rOpenSci 12.4 RLadies 12.5 pyOpenSci", " Chapter 12 Community learning Preamble: Learn with others. The power of Welcome, empathy. Be inclusive “If you want to learn to write, you read a lot, if you want to play music, you listen a lot. It’s hard to do this w data analysis.” - Hilary Parker &amp; Roger Peng, RStudio::conf(2020) keynote This is why we have community, to help us connect, share, &amp; learn. 12.1 Twitter You can use Twitter for coding? 12.1.1 #rstats 12.1.2 #tidytuesday 12.2 Slack You can use Slack for coding? From Gene &amp; Jon: Help folks become good teachers/mentors, Use the network: teach the potential teachers. Become a mentor, put it on your CV. Why should we use Slack? slides &amp; blog- Stephanie Hicks &amp; Leonardo Collado-Torres 12.2.1 Gene Yeo’s learning channel 12.2.2 R4DS Community R for Data Science Online Learning Community. For learners (“Develop your skills in R and Data science with a friendly community”), mentors (“help build a positive learning community for R users and expand your R debugging skills”), and community (“help develop resources for others to feel part of the #rstats community”) @R4DScommunity on Twitter Join the Slack Jon’s lightning talk 12.3 rOpenSci 12.4 RLadies 12.5 pyOpenSci https://chadsansing.gitbooks.io/open-facilitation/content/chapter12.html Twitter. rstats. Draw from R for Excel Users, Openscapes. "],
["scripts.html", "Chapter 13 Scripts 13.1 scripts to organize &amp; name incoming imaging files", " Chapter 13 Scripts Preamble These scripts are contributed from the NDCN community and have been adapted or “remixed” by other community members during office hours hackathons, etc. All scripts will be in a GitHub repo. 13.1 scripts to organize &amp; name incoming imaging files in language X… "]
]
